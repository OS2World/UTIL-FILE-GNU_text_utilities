# Makefile.in generated automatically by automake 1.4-p5 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@
CATALOGS = @CATALOGS@
CATOBJEXT = @CATOBJEXT@
CC = @CC@
CPP = @CPP@
DATADIRNAME = @DATADIRNAME@
EXEEXT = @EXEEXT@
GENCAT = @GENCAT@
GMOFILES = @GMOFILES@
GMSGFMT = @GMSGFMT@
GNU_PACKAGE = @GNU_PACKAGE@
GT_NO = @GT_NO@
GT_YES = @GT_YES@
INCLUDE_LOCALE_H = @INCLUDE_LOCALE_H@
INSTOBJEXT = @INSTOBJEXT@
INTLDEPS = @INTLDEPS@
INTLLIBS = @INTLLIBS@
INTLOBJS = @INTLOBJS@
LIBOBJS = @LIBOBJS@
MAKEINFO = @MAKEINFO@
MKINSTALLDIRS = @MKINSTALLDIRS@
MSGFMT = @MSGFMT@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PERL = @PERL@
POFILES = @POFILES@
POSUB = @POSUB@
POW_LIBM = @POW_LIBM@
RANLIB = @RANLIB@
U = @U@
USE_INCLUDED_LIBINTL = @USE_INCLUDED_LIBINTL@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
l = @l@

AUTOMAKE_OPTIONS = ansi2knr

bin_PROGRAMS = cat cksum comm csplit cut expand fmt fold head join md5sum nl od paste pr ptx sort split sum tac tail tr tsort unexpand uniq wc


noinst_HEADERS = sys2.h system.h
EXTRA_DIST = tac-pipe.c

datadir = $(prefix)/@DATADIRNAME@
localedir = $(datadir)/locale

INCLUDES = -I.. -I$(srcdir) -I$(top_srcdir)/lib -I../intl
DEFS = -DLOCALEDIR=\"$(localedir)\" @DEFS@
LDADD = @INTLLIBS@ ../lib/libtu.a

sort_LDADD = $(LDADD) @POW_LIBM@
sort_DEPENDENCIES = $(LDADD)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../config.h
CONFIG_CLEAN_FILES = 
bin_PROGRAMS =  cat$(EXEEXT) cksum$(EXEEXT) comm$(EXEEXT) \
csplit$(EXEEXT) cut$(EXEEXT) expand$(EXEEXT) fmt$(EXEEXT) fold$(EXEEXT) \
head$(EXEEXT) join$(EXEEXT) md5sum$(EXEEXT) nl$(EXEEXT) od$(EXEEXT) \
paste$(EXEEXT) pr$(EXEEXT) ptx$(EXEEXT) sort$(EXEEXT) split$(EXEEXT) \
sum$(EXEEXT) tac$(EXEEXT) tail$(EXEEXT) tr$(EXEEXT) tsort$(EXEEXT) \
unexpand$(EXEEXT) uniq$(EXEEXT) wc$(EXEEXT)
PROGRAMS =  $(bin_PROGRAMS)

CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
ANSI2KNR = @ANSI2KNR@
cat_SOURCES = cat.c
cat_OBJECTS =  cat$U.$(OBJEXT)
cat_LDADD = $(LDADD)
cat_DEPENDENCIES =  ../lib/libtu.a
cat_LDFLAGS = 
cksum_SOURCES = cksum.c
cksum_OBJECTS =  cksum$U.$(OBJEXT)
cksum_LDADD = $(LDADD)
cksum_DEPENDENCIES =  ../lib/libtu.a
cksum_LDFLAGS = 
comm_SOURCES = comm.c
comm_OBJECTS =  comm$U.$(OBJEXT)
comm_LDADD = $(LDADD)
comm_DEPENDENCIES =  ../lib/libtu.a
comm_LDFLAGS = 
csplit_SOURCES = csplit.c
csplit_OBJECTS =  csplit$U.$(OBJEXT)
csplit_LDADD = $(LDADD)
csplit_DEPENDENCIES =  ../lib/libtu.a
csplit_LDFLAGS = 
cut_SOURCES = cut.c
cut_OBJECTS =  cut$U.$(OBJEXT)
cut_LDADD = $(LDADD)
cut_DEPENDENCIES =  ../lib/libtu.a
cut_LDFLAGS = 
expand_SOURCES = expand.c
expand_OBJECTS =  expand$U.$(OBJEXT)
expand_LDADD = $(LDADD)
expand_DEPENDENCIES =  ../lib/libtu.a
expand_LDFLAGS = 
fmt_SOURCES = fmt.c
fmt_OBJECTS =  fmt$U.$(OBJEXT)
fmt_LDADD = $(LDADD)
fmt_DEPENDENCIES =  ../lib/libtu.a
fmt_LDFLAGS = 
fold_SOURCES = fold.c
fold_OBJECTS =  fold$U.$(OBJEXT)
fold_LDADD = $(LDADD)
fold_DEPENDENCIES =  ../lib/libtu.a
fold_LDFLAGS = 
head_SOURCES = head.c
head_OBJECTS =  head$U.$(OBJEXT)
head_LDADD = $(LDADD)
head_DEPENDENCIES =  ../lib/libtu.a
head_LDFLAGS = 
join_SOURCES = join.c
join_OBJECTS =  join$U.$(OBJEXT)
join_LDADD = $(LDADD)
join_DEPENDENCIES =  ../lib/libtu.a
join_LDFLAGS = 
md5sum_SOURCES = md5sum.c
md5sum_OBJECTS =  md5sum$U.$(OBJEXT)
md5sum_LDADD = $(LDADD)
md5sum_DEPENDENCIES =  ../lib/libtu.a
md5sum_LDFLAGS = 
nl_SOURCES = nl.c
nl_OBJECTS =  nl$U.$(OBJEXT)
nl_LDADD = $(LDADD)
nl_DEPENDENCIES =  ../lib/libtu.a
nl_LDFLAGS = 
od_SOURCES = od.c
od_OBJECTS =  od$U.$(OBJEXT)
od_LDADD = $(LDADD)
od_DEPENDENCIES =  ../lib/libtu.a
od_LDFLAGS = 
paste_SOURCES = paste.c
paste_OBJECTS =  paste$U.$(OBJEXT)
paste_LDADD = $(LDADD)
paste_DEPENDENCIES =  ../lib/libtu.a
paste_LDFLAGS = 
pr_SOURCES = pr.c
pr_OBJECTS =  pr$U.$(OBJEXT)
pr_LDADD = $(LDADD)
pr_DEPENDENCIES =  ../lib/libtu.a
pr_LDFLAGS = 
ptx_SOURCES = ptx.c
ptx_OBJECTS =  ptx$U.$(OBJEXT)
ptx_LDADD = $(LDADD)
ptx_DEPENDENCIES =  ../lib/libtu.a
ptx_LDFLAGS = 
sort_SOURCES = sort.c
sort_OBJECTS =  sort$U.$(OBJEXT)
sort_LDFLAGS = 
split_SOURCES = split.c
split_OBJECTS =  split$U.$(OBJEXT)
split_LDADD = $(LDADD)
split_DEPENDENCIES =  ../lib/libtu.a
split_LDFLAGS = 
sum_SOURCES = sum.c
sum_OBJECTS =  sum$U.$(OBJEXT)
sum_LDADD = $(LDADD)
sum_DEPENDENCIES =  ../lib/libtu.a
sum_LDFLAGS = 
tac_SOURCES = tac.c
tac_OBJECTS =  tac$U.$(OBJEXT)
tac_LDADD = $(LDADD)
tac_DEPENDENCIES =  ../lib/libtu.a
tac_LDFLAGS = 
tail_SOURCES = tail.c
tail_OBJECTS =  tail$U.$(OBJEXT)
tail_LDADD = $(LDADD)
tail_DEPENDENCIES =  ../lib/libtu.a
tail_LDFLAGS = 
tr_SOURCES = tr.c
tr_OBJECTS =  tr$U.$(OBJEXT)
tr_LDADD = $(LDADD)
tr_DEPENDENCIES =  ../lib/libtu.a
tr_LDFLAGS = 
tsort_SOURCES = tsort.c
tsort_OBJECTS =  tsort$U.$(OBJEXT)
tsort_LDADD = $(LDADD)
tsort_DEPENDENCIES =  ../lib/libtu.a
tsort_LDFLAGS = 
unexpand_SOURCES = unexpand.c
unexpand_OBJECTS =  unexpand$U.$(OBJEXT)
unexpand_LDADD = $(LDADD)
unexpand_DEPENDENCIES =  ../lib/libtu.a
unexpand_LDFLAGS = 
uniq_SOURCES = uniq.c
uniq_OBJECTS =  uniq$U.$(OBJEXT)
uniq_LDADD = $(LDADD)
uniq_DEPENDENCIES =  ../lib/libtu.a
uniq_LDFLAGS = 
wc_SOURCES = wc.c
wc_OBJECTS =  wc$U.$(OBJEXT)
wc_LDADD = $(LDADD)
wc_DEPENDENCIES =  ../lib/libtu.a
wc_LDFLAGS = 
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
HEADERS =  $(noinst_HEADERS)

DIST_COMMON =  Makefile.am Makefile.in ansi2knr.1 ansi2knr.c


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = tar
GZIP_ENV = --best
DEP_FILES =  .deps/cat.P .deps/cksum.P .deps/comm.P .deps/csplit.P \
.deps/cut.P .deps/expand.P .deps/fmt.P .deps/fold.P .deps/head.P \
.deps/join.P .deps/md5sum.P .deps/nl.P .deps/od.P .deps/paste.P \
.deps/pr.P .deps/ptx.P .deps/sort.P .deps/split.P .deps/sum.P \
.deps/tac.P .deps/tail.P .deps/tr.P .deps/tsort.P .deps/unexpand.P \
.deps/uniq.P .deps/wc.P
SOURCES = cat.c cksum.c comm.c csplit.c cut.c expand.c fmt.c fold.c head.c join.c md5sum.c nl.c od.c paste.c pr.c ptx.c sort.c split.c sum.c tac.c tail.c tr.c tsort.c unexpand.c uniq.c wc.c
OBJECTS = cat$U.$(OBJEXT) cksum$U.$(OBJEXT) comm$U.$(OBJEXT) csplit$U.$(OBJEXT) cut$U.$(OBJEXT) expand$U.$(OBJEXT) fmt$U.$(OBJEXT) fold$U.$(OBJEXT) head$U.$(OBJEXT) join$U.$(OBJEXT) md5sum$U.$(OBJEXT) nl$U.$(OBJEXT) od$U.$(OBJEXT) paste$U.$(OBJEXT) pr$U.$(OBJEXT) ptx$U.$(OBJEXT) sort$U.$(OBJEXT) split$U.$(OBJEXT) sum$U.$(OBJEXT) tac$U.$(OBJEXT) tail$U.$(OBJEXT) tr$U.$(OBJEXT) tsort$U.$(OBJEXT) unexpand$U.$(OBJEXT) uniq$U.$(OBJEXT) wc$U.$(OBJEXT)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .o .obj .s
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status $(BUILT_SOURCES)
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-binPROGRAMS:

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

distclean-binPROGRAMS:

maintainer-clean-binPROGRAMS:

install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo "  $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`"; \
	     $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	list='$(bin_PROGRAMS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	done

# FIXME: We should only use cygpath when building on Windows,
# and only if it is available.
.c.obj:
	$(COMPILE) -c $<
#OBJEXT	$(COMPILE) -c `cygpath -w $<`

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core
	-rm -f *.$(OBJEXT)

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

mostlyclean-krextra:

clean-krextra:
	-rm -f ansi2knr

distclean-krextra:

maintainer-clean-krextra:
ansi2knr: ansi2knr.0OBJEXT)
	$(LINK) ansi2knr.0OBJEXT) $(LIBS)
ansi2knr.0OBJEXT): $(CONFIG_HEADER)


mostlyclean-kr:
	-rm -f *_.c

clean-kr:

distclean-kr:

maintainer-clean-kr:

cat$(EXEEXT): $(cat_OBJECTS) $(cat_DEPENDENCIES)
	@rm -f cat$(EXEEXT)
	$(LINK) $(cat_LDFLAGS) $(cat_OBJECTS) $(cat_LDADD) $(LIBS)

cksum$(EXEEXT): $(cksum_OBJECTS) $(cksum_DEPENDENCIES)
	@rm -f cksum$(EXEEXT)
	$(LINK) $(cksum_LDFLAGS) $(cksum_OBJECTS) $(cksum_LDADD) $(LIBS)

comm$(EXEEXT): $(comm_OBJECTS) $(comm_DEPENDENCIES)
	@rm -f comm$(EXEEXT)
	$(LINK) $(comm_LDFLAGS) $(comm_OBJECTS) $(comm_LDADD) $(LIBS)

csplit$(EXEEXT): $(csplit_OBJECTS) $(csplit_DEPENDENCIES)
	@rm -f csplit$(EXEEXT)
	$(LINK) $(csplit_LDFLAGS) $(csplit_OBJECTS) $(csplit_LDADD) $(LIBS)

cut$(EXEEXT): $(cut_OBJECTS) $(cut_DEPENDENCIES)
	@rm -f cut$(EXEEXT)
	$(LINK) $(cut_LDFLAGS) $(cut_OBJECTS) $(cut_LDADD) $(LIBS)

expand$(EXEEXT): $(expand_OBJECTS) $(expand_DEPENDENCIES)
	@rm -f expand$(EXEEXT)
	$(LINK) $(expand_LDFLAGS) $(expand_OBJECTS) $(expand_LDADD) $(LIBS)

fmt$(EXEEXT): $(fmt_OBJECTS) $(fmt_DEPENDENCIES)
	@rm -f fmt$(EXEEXT)
	$(LINK) $(fmt_LDFLAGS) $(fmt_OBJECTS) $(fmt_LDADD) $(LIBS)

fold$(EXEEXT): $(fold_OBJECTS) $(fold_DEPENDENCIES)
	@rm -f fold$(EXEEXT)
	$(LINK) $(fold_LDFLAGS) $(fold_OBJECTS) $(fold_LDADD) $(LIBS)

head$(EXEEXT): $(head_OBJECTS) $(head_DEPENDENCIES)
	@rm -f head$(EXEEXT)
	$(LINK) $(head_LDFLAGS) $(head_OBJECTS) $(head_LDADD) $(LIBS)

join$(EXEEXT): $(join_OBJECTS) $(join_DEPENDENCIES)
	@rm -f join$(EXEEXT)
	$(LINK) $(join_LDFLAGS) $(join_OBJECTS) $(join_LDADD) $(LIBS)

md5sum$(EXEEXT): $(md5sum_OBJECTS) $(md5sum_DEPENDENCIES)
	@rm -f md5sum$(EXEEXT)
	$(LINK) $(md5sum_LDFLAGS) $(md5sum_OBJECTS) $(md5sum_LDADD) $(LIBS)

nl$(EXEEXT): $(nl_OBJECTS) $(nl_DEPENDENCIES)
	@rm -f nl$(EXEEXT)
	$(LINK) $(nl_LDFLAGS) $(nl_OBJECTS) $(nl_LDADD) $(LIBS)

od$(EXEEXT): $(od_OBJECTS) $(od_DEPENDENCIES)
	@rm -f od$(EXEEXT)
	$(LINK) $(od_LDFLAGS) $(od_OBJECTS) $(od_LDADD) $(LIBS)

paste$(EXEEXT): $(paste_OBJECTS) $(paste_DEPENDENCIES)
	@rm -f paste$(EXEEXT)
	$(LINK) $(paste_LDFLAGS) $(paste_OBJECTS) $(paste_LDADD) $(LIBS)

pr$(EXEEXT): $(pr_OBJECTS) $(pr_DEPENDENCIES)
	@rm -f pr$(EXEEXT)
	$(LINK) $(pr_LDFLAGS) $(pr_OBJECTS) $(pr_LDADD) $(LIBS)

ptx$(EXEEXT): $(ptx_OBJECTS) $(ptx_DEPENDENCIES)
	@rm -f ptx$(EXEEXT)
	$(LINK) $(ptx_LDFLAGS) $(ptx_OBJECTS) $(ptx_LDADD) $(LIBS)

sort$(EXEEXT): $(sort_OBJECTS) $(sort_DEPENDENCIES)
	@rm -f sort$(EXEEXT)
	$(LINK) $(sort_LDFLAGS) $(sort_OBJECTS) $(sort_LDADD) $(LIBS)

split$(EXEEXT): $(split_OBJECTS) $(split_DEPENDENCIES)
	@rm -f split$(EXEEXT)
	$(LINK) $(split_LDFLAGS) $(split_OBJECTS) $(split_LDADD) $(LIBS)

sum$(EXEEXT): $(sum_OBJECTS) $(sum_DEPENDENCIES)
	@rm -f sum$(EXEEXT)
	$(LINK) $(sum_LDFLAGS) $(sum_OBJECTS) $(sum_LDADD) $(LIBS)

tac$(EXEEXT): $(tac_OBJECTS) $(tac_DEPENDENCIES)
	@rm -f tac$(EXEEXT)
	$(LINK) $(tac_LDFLAGS) $(tac_OBJECTS) $(tac_LDADD) $(LIBS)

tail$(EXEEXT): $(tail_OBJECTS) $(tail_DEPENDENCIES)
	@rm -f tail$(EXEEXT)
	$(LINK) $(tail_LDFLAGS) $(tail_OBJECTS) $(tail_LDADD) $(LIBS)

tr$(EXEEXT): $(tr_OBJECTS) $(tr_DEPENDENCIES)
	@rm -f tr$(EXEEXT)
	$(LINK) $(tr_LDFLAGS) $(tr_OBJECTS) $(tr_LDADD) $(LIBS)

tsort$(EXEEXT): $(tsort_OBJECTS) $(tsort_DEPENDENCIES)
	@rm -f tsort$(EXEEXT)
	$(LINK) $(tsort_LDFLAGS) $(tsort_OBJECTS) $(tsort_LDADD) $(LIBS)

unexpand$(EXEEXT): $(unexpand_OBJECTS) $(unexpand_DEPENDENCIES)
	@rm -f unexpand$(EXEEXT)
	$(LINK) $(unexpand_LDFLAGS) $(unexpand_OBJECTS) $(unexpand_LDADD) $(LIBS)

uniq$(EXEEXT): $(uniq_OBJECTS) $(uniq_DEPENDENCIES)
	@rm -f uniq$(EXEEXT)
	$(LINK) $(uniq_LDFLAGS) $(uniq_OBJECTS) $(uniq_LDADD) $(LIBS)

wc$(EXEEXT): $(wc_OBJECTS) $(wc_DEPENDENCIES)
	@rm -f wc$(EXEEXT)
	$(LINK) $(wc_LDFLAGS) $(wc_OBJECTS) $(wc_LDADD) $(LIBS)
cat_.c: cat.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/cat.c; then echo $(srcdir)/cat.c; else echo cat.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > cat_.c
cksum_.c: cksum.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/cksum.c; then echo $(srcdir)/cksum.c; else echo cksum.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > cksum_.c
comm_.c: comm.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/comm.c; then echo $(srcdir)/comm.c; else echo comm.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > comm_.c
csplit_.c: csplit.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/csplit.c; then echo $(srcdir)/csplit.c; else echo csplit.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > csplit_.c
cut_.c: cut.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/cut.c; then echo $(srcdir)/cut.c; else echo cut.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > cut_.c
expand_.c: expand.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/expand.c; then echo $(srcdir)/expand.c; else echo expand.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > expand_.c
fmt_.c: fmt.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/fmt.c; then echo $(srcdir)/fmt.c; else echo fmt.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > fmt_.c
fold_.c: fold.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/fold.c; then echo $(srcdir)/fold.c; else echo fold.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > fold_.c
head_.c: head.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/head.c; then echo $(srcdir)/head.c; else echo head.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > head_.c
join_.c: join.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/join.c; then echo $(srcdir)/join.c; else echo join.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > join_.c
md5sum_.c: md5sum.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/md5sum.c; then echo $(srcdir)/md5sum.c; else echo md5sum.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > md5sum_.c
nl_.c: nl.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/nl.c; then echo $(srcdir)/nl.c; else echo nl.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > nl_.c
od_.c: od.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/od.c; then echo $(srcdir)/od.c; else echo od.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > od_.c
paste_.c: paste.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/paste.c; then echo $(srcdir)/paste.c; else echo paste.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > paste_.c
pr_.c: pr.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/pr.c; then echo $(srcdir)/pr.c; else echo pr.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > pr_.c
ptx_.c: ptx.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/ptx.c; then echo $(srcdir)/ptx.c; else echo ptx.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > ptx_.c
sort_.c: sort.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/sort.c; then echo $(srcdir)/sort.c; else echo sort.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > sort_.c
split_.c: split.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/split.c; then echo $(srcdir)/split.c; else echo split.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > split_.c
sum_.c: sum.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/sum.c; then echo $(srcdir)/sum.c; else echo sum.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > sum_.c
tac_.c: tac.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tac.c; then echo $(srcdir)/tac.c; else echo tac.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > tac_.c
tail_.c: tail.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tail.c; then echo $(srcdir)/tail.c; else echo tail.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > tail_.c
tr_.c: tr.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tr.c; then echo $(srcdir)/tr.c; else echo tr.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > tr_.c
tsort_.c: tsort.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsort.c; then echo $(srcdir)/tsort.c; else echo tsort.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > tsort_.c
unexpand_.c: unexpand.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/unexpand.c; then echo $(srcdir)/unexpand.c; else echo unexpand.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > unexpand_.c
uniq_.c: uniq.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/uniq.c; then echo $(srcdir)/uniq.c; else echo uniq.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > uniq_.c
wc_.c: wc.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/wc.c; then echo $(srcdir)/wc.c; else echo wc.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > wc_.c
cat_.$(OBJEXT) cksum_.$(OBJEXT) comm_.$(OBJEXT) csplit_.$(OBJEXT) \
cut_.$(OBJEXT) expand_.$(OBJEXT) fmt_.$(OBJEXT) fold_.$(OBJEXT) \
head_.$(OBJEXT) join_.$(OBJEXT) md5sum_.$(OBJEXT) nl_.$(OBJEXT) \
od_.$(OBJEXT) paste_.$(OBJEXT) pr_.$(OBJEXT) ptx_.$(OBJEXT) \
sort_.$(OBJEXT) split_.$(OBJEXT) sum_.$(OBJEXT) tac_.$(OBJEXT) \
tail_.$(OBJEXT) tr_.$(OBJEXT) tsort_.$(OBJEXT) unexpand_.$(OBJEXT) \
uniq_.$(OBJEXT) wc_.$(OBJEXT) : $(ANSI2KNR)

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = src

distdir: $(DISTFILES)
	here=`cd $(top_builddir) && pwd`; \
	top_distdir=`cd $(top_distdir) && pwd`; \
	distdir=`cd $(distdir) && pwd`; \
	cd $(top_srcdir) \
	  && $(AUTOMAKE) --include-deps --build-dir=$$here --srcdir-name=$(top_srcdir) --output-dir=$$top_distdir --gnu src/Makefile
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done

DEPS_MAGIC := $(shell mkdir .deps > /dev/null 2>&1 || :)

-include $(DEP_FILES)

mostlyclean-depend:

clean-depend:

distclean-depend:
	-rm -rf .deps

maintainer-clean-depend:

%.o: %.c
	@echo '$(COMPILE) -c $<'; \
	$(COMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-cp .deps/$(*F).pp .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm .deps/$(*F).pp

%.lo: %.c
	@echo '$(LTCOMPILE) -c $<'; \
	$(LTCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-sed -e 's/^\([^:]*\)\.o[ 	]*:/\1.lo \1.o :/' \
	  < .deps/$(*F).pp > .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm -f .deps/$(*F).pp
info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am: install-binPROGRAMS
install-exec: install-exec-am

install-data-am:
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am: uninstall-binPROGRAMS
uninstall: uninstall-am
all-am: Makefile $(ANSI2KNR) $(PROGRAMS) $(HEADERS)
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:
	$(mkinstalldirs)  $(DESTDIR)$(bindir)


mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
mostlyclean-am:  mostlyclean-binPROGRAMS mostlyclean-compile \
		mostlyclean-krextra mostlyclean-kr mostlyclean-tags \
		mostlyclean-depend mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-binPROGRAMS clean-compile clean-krextra clean-kr \
		clean-tags clean-depend clean-generic mostlyclean-am

clean: clean-am

distclean-am:  distclean-binPROGRAMS distclean-compile distclean-krextra \
		distclean-kr distclean-tags distclean-depend \
		distclean-generic clean-am

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-binPROGRAMS \
		maintainer-clean-compile maintainer-clean-krextra \
		maintainer-clean-kr maintainer-clean-tags \
		maintainer-clean-depend maintainer-clean-generic \
		distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-binPROGRAMS distclean-binPROGRAMS clean-binPROGRAMS \
maintainer-clean-binPROGRAMS uninstall-binPROGRAMS install-binPROGRAMS \
mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile mostlyclean-krextra distclean-krextra \
clean-krextra maintainer-clean-krextra mostlyclean-kr distclean-kr \
clean-kr maintainer-clean-kr tags mostlyclean-tags distclean-tags \
clean-tags maintainer-clean-tags distdir mostlyclean-depend \
distclean-depend clean-depend maintainer-clean-depend info-am info \
dvi-am dvi check check-am installcheck-am installcheck install-exec-am \
install-exec install-data-am install-data install-am install \
uninstall-am uninstall all-redirect all-am all installdirs \
mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean


$(PROGRAMS): $(LDADD)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
